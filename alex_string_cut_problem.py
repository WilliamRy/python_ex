"""
The problem: Let S be a string whose characters are from [0-9]. By insert some commas,  
S can be splitted into some substrings and each substring can be viewed as a decimal 
integer. Let X(S) be the set of non-decreasing sequence generated by splitting S. Let 
L(S) be the set of longest sequences in X(S). Write a function that return a element in 
L(S) for any input S.
"""
#=======================================================================================

#generate the string
import random
from time import time

def generator(nn):
    lst = []    
    for i in range(nn):
        lst.append(random.randint(0,9))
    result = ''.join([str(x) for x in lst])
    return result
  
def solution(seq):
    def splitter(seq,location):    
        """return splitted substrings"""
        if location == []:
            result = [seq]
        else:
            result = [seq[:location[0]]]
            for i in range(len(location)-1):
                result.append(seq[location[i]:location[i+1]])
            result.append(seq[location[-1]:])
        return result
    def less(str1,str2):
        """return int(str1) < int(str2)"""
        result = False
        import re
        s1 = re.sub('^0*','',str1)
        s2 = re.sub('^0*','',str2)
        l1 = len(s1)
        l2 = len(s2)
        if l1 < l2:
            result = True
        elif l1 == l2:
            for i in range(l1):
                if s1[i] < s2[i]:
                    result = True
                    break
                elif s1[i] > s2[i]:
                    break
        return result             
    results = [[0]]
    ncommas = [0]
    lastnums = ['0']
    for i in range(len(seq)):
        j = -1
        while less(seq[i+1+j:i+1],lastnums[j]):
            j += -1
        lastnum = seq[i+1+j:i+1]
        ncomma = ncommas[j] + 1
        final_j = j
        while i+j >=0 and seq[i+j] == '0':
            tmp_ncomma = ncommas[j] + 1
            if tmp_ncomma > ncomma and not less(lastnum,lastnums[j]):
                ncomma = tmp_ncomma
                final_j = j
            j += -1
        results.append(results[final_j] + [i+1])
        ncommas.append(ncomma)
        lastnums.append(lastnum)
    #print lastnums
    return splitter(seq,results[-1][1:-1])

aa = generator(1000)
print aa
begin = time()
ss = solution(aa)
print 'used time %fs' % (time()-begin)
print ss

